# .github/workflows/trizen.yml
name: Build trizen-git Arch Package

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    container: archlinux:latest

    env:
      WORKSPACE: ${{ github.workspace }}

    steps:
      - name: Checkout action repo (required for $GITHUB_WORKSPACE)
        uses: actions/checkout@v3

      - name: Install base-devel, git & sudo
        run: |
          pacman -Sy --noconfirm --needed
          pacman -S --noconfirm --needed base-devel git sudo

      - name: Create non-root builder user
        run: |
          useradd -m builder
          echo "builder ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/builder
          chmod 440 /etc/sudoers.d/builder
          # Give builder ownership of the workspace
          chown -R builder:builder "$WORKSPACE"

      - name: Clone Trizen AUR repo as builder
        run: |
          sudo -u builder -i git clone https://aur.archlinux.org/trizen.git "$WORKSPACE/trizen"

      - name: Build the Arch package as builder
        id: pkg_build
        run: |
          sudo -u builder -i bash << 'EOF'
            cd "$WORKSPACE/trizen"
            MAKEFLAGS="-j$(nproc)" \
              makepkg --noconfirm --syncdeps --rmdeps --skippgpcheck -f
          EOF

      - name: Gather built package
        run: |
          mkdir -p "$WORKSPACE/artifacts"
          mv "$WORKSPACE/trizen"/*.pkg.tar.zst "$WORKSPACE/artifacts/"

      - name: Generate build metadata
        id: build_meta
        run: |
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >>"$GITHUB_OUTPUT"
          echo "architecture=$(uname -m)"                   >>"$GITHUB_OUTPUT"

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name || github.run_number }}
          name: trizen ${{ github.ref_name || github.run_number }}
          body: |
            Package:      trizen-git for Arch Linux
            Built on:     ${{ steps.build_meta.outputs.build_date }}
            Architecture: ${{ steps.build_meta.outputs.architecture }}
          files: artifacts/*.pkg.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
