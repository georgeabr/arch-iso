name: Build Custom Arch Linux ISO with arch.sh script

on:
  workflow_dispatch:
    inputs:
      build_date:
        description: 'ISO Build Timestamp (YYYYMMDD_HHMMSS, leave empty for current time)'
        required: false
        type: string
        # Removed the problematic default value here.
        # The timestamp will be generated in the step below if not provided.
      profile_name:
        description: 'Name of the archiso profile to use (e.g., "releng" or your custom profile folder)'
        required: false
        type: string
        default: 'releng'

jobs:
  build_iso:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest
      options: --privileged

    timeout-minutes: 120

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install archiso and build dependencies within the container
      run: |
        pacman -Sy --noconfirm archiso git squashfs-tools xorriso dosfstools curl

    - name: Prepare Archiso Build Profile and Add Custom Script
      id: prepare_profile
      run: |
        PROFILE_DIR="archiso_build_profile"
        INPUT_PROFILE_NAME="${{ github.event.inputs.profile_name }}"
        SCRIPT_URL="https://raw.githubusercontent.com/georgeabr/arch/refs/heads/master/arch.sh"
        SCRIPT_FILENAME="arch.sh"
        SCRIPT_DEST_PATH="$PROFILE_DIR/airootfs/root/$SCRIPT_FILENAME"

        if [ -d "./$INPUT_PROFILE_NAME" ]; then
          echo "Using custom profile from repository: ./$INPUT_PROFILE_NAME"
          cp -r "./$INPUT_PROFILE_NAME" "$PROFILE_DIR"
        elif [ -d "/usr/share/archiso/configs/$INPUT_PROFILE_NAME" ]; then
          echo "Using official archiso profile: /usr/share/archiso/configs/$INPUT_PROFILE_NAME"
          cp -r "/usr/share/archiso/configs/$INPUT_PROFILE_NAME" "$PROFILE_DIR"
        else
          echo "Error: Profile '$INPUT_PROFILE_NAME' not found in repository or official configs."
          exit 1
        fi

        mkdir -p "$(dirname "$SCRIPT_DEST_PATH")"
        echo "Downloading $SCRIPT_URL to $SCRIPT_DEST_PATH"
        curl -sSL "$SCRIPT_URL" -o "$SCRIPT_DEST_PATH"
        echo "Setting executable permissions for $SCRIPT_DEST_PATH"
        chmod +x "$SCRIPT_DEST_PATH"

        echo "PROFILE_DIR=$PROFILE_DIR" >> "$GITHUB_OUTPUT"

    - name: Set ISO filename and output directory
      id: iso_info
      shell: bash
      run: |
        # Use user-provided build_date if available, otherwise generate current timestamp
        if [ -n "${{ github.event.inputs.build_date }}" ]; then
          CURRENT_BUILD_DATE="${{ github.event.inputs.build_date }}"
        else
          CURRENT_BUILD_DATE=$(date '+%Y%m%d_%H%M%S')
        fi

        ISO_VERSION="${GITHUB_REF_NAME:-$(echo $GITHUB_SHA | cut -c1-7)}"
        ISO_FILENAME="archlinux-custom-${ISO_VERSION}-${CURRENT_BUILD_DATE}.iso"
        ISO_OUTPUT_DIR="out"

        echo "ISO_FILENAME=$ISO_FILENAME" >> "$GITHUB_OUTPUT"
        echo "ISO_OUTPUT_DIR=$ISO_OUTPUT_DIR" >> "$GITHUB_OUTPUT"
        echo "CURRENT_BUILD_DATE=$CURRENT_BUILD_DATE" >> "$GITHUB_OUTPUT" # Export for release step

    - name: Build Arch Linux ISO
      run: |
        mkarchiso -v -o ${{ steps.iso_info.outputs.ISO_OUTPUT_DIR }} ${{ steps.prepare_profile.outputs.PROFILE_DIR }}/

    - name: List generated ISOs (for debugging)
      run: ls -lh ${{ steps.iso_info.outputs.ISO_OUTPUT_DIR }}

    - name: Upload ISO as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-custom-iso-${{ steps.iso_info.outputs.ISO_FILENAME }}
        path: ${{ steps.iso_info.outputs.ISO_OUTPUT_DIR }}/${{ steps.iso_info.outputs.ISO_FILENAME }}
        retention-days: 7

    - name: Create GitHub Release (Optional)
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ steps.iso_info.outputs.ISO_OUTPUT_DIR }}/${{ steps.iso_info.outputs.ISO_FILENAME }}
        # Use the actual generated/provided build date from the step's output
        tag_name: "iso-${{ steps.iso_info.outputs.CURRENT_BUILD_DATE }}"
        name: "Arch Linux Custom ISO ${{ steps.iso_info.outputs.CURRENT_BUILD_DATE }}"
        body: |
          Custom Arch Linux ISO built on ${{ steps.iso_info.outputs.CURRENT_BUILD_DATE }}
          using the ${{ github.event.inputs.profile_name }} archiso profile.
          Includes the 'arch.sh' script in /root/arch.sh.
          Based on Arch Linux packages available at build time.
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
