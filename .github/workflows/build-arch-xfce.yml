name: Build Arch Linux ISO with XFCE

on:
  workflow_dispatch:
    inputs:
      build_date:
        description: 'ISO Build Timestamp (YYYYMMDD_HHMMSS, leave empty for current time)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build_iso:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest
      options: --privileged

    timeout-minutes: 120

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Install archiso and dependencies
      shell: bash
      run: |
        pacman -Sy --noconfirm archiso git squashfs-tools xorriso dosfstools curl util-linux

    - name: Create XFCE Profile from Scratch
      id: prepare_profile
      shell: bash
      run: |
        PROFILE_DIR="archiso_build_profile"
        mkdir -p "$PROFILE_DIR/airootfs/root"
        mkdir -p "$PROFILE_DIR/airootfs/etc/lightdm"
        mkdir -p "$PROFILE_DIR/airootfs/etc/systemd/system/multi-user.target.wants"

        # Package list
        cat <<EOF > "$PROFILE_DIR/packages.x86_64"
base
linux
linux-firmware
mkinitcpio
mkinitcpio-archiso
xfce4
xfce4-goodies
xorg-server
xorg-xinit
lightdm
lightdm-gtk-greeter
networkmanager
firefox
htop
iotop
gparted
EOF

        # Profile definition
        cat <<EOF > "$PROFILE_DIR/profiledef.sh"
iso_name="archlinux-xfce"
iso_label="ARCH_XFCE"
iso_publisher="Arch Linux XFCE Custom"
iso_application="Arch Linux XFCE Live ISO"
install_dir="arch"
buildmodes=("iso")
bootmodes=("bios.syslinux.mbr" "uefi-x64.systemd-boot.esp")
arch="x86_64"
airootfs_image_type="squashfs"
file_permissions=(["/etc/shadow"]="0:0:400")
EOF

        # Custom script
        SCRIPT_URL="https://raw.githubusercontent.com/georgeabr/arch/refs/heads/master/arch.sh"
        curl -sSL "$SCRIPT_URL" -o "$PROFILE_DIR/airootfs/root/arch.sh"
        chmod +x "$PROFILE_DIR/airootfs/root/arch.sh"

        # Root shell override
        mkdir -p "$PROFILE_DIR/airootfs/etc"
        echo "root:x:0:0:root:/root:/bin/bash" > "$PROFILE_DIR/airootfs/etc/passwd"

        # Autologin and XFCE session
        echo "exec startxfce4" > "$PROFILE_DIR/airootfs/root/.xinitrc"
        cat <<EOF > "$PROFILE_DIR/airootfs/etc/lightdm/lightdm.conf"
[Seat:*]
autologin-user=root
autologin-session=xfce
EOF

        ln -sf /usr/lib/systemd/system/lightdm.service "$PROFILE_DIR/airootfs/etc/systemd/system/display-manager.service"
        ln -sf /usr/lib/systemd/system/NetworkManager.service "$PROFILE_DIR/airootfs/etc/systemd/system/multi-user.target.wants/NetworkManager.service"

        echo "PROFILE_DIR=$PROFILE_DIR" >> "$GITHUB_OUTPUT"

    - name: Define Build Metadata
      id: build_metadata
      shell: bash
      run: |
        BUILD_TIMESTAMP="${{ github.event.inputs.build_date }}"
        [ -z "$BUILD_TIMESTAMP" ] && BUILD_TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
        ISO_OUTPUT_DIR="out"
        echo "BUILD_TIMESTAMP=$BUILD_TIMESTAMP" >> "$GITHUB_OUTPUT"
        echo "ISO_OUTPUT_DIR=$ISO_OUTPUT_DIR" >> "$GITHUB_OUTPUT"

    - name: Build ISO
      id: build_iso_step
      shell: bash
      run: |
        mkarchiso -v -o ${{ steps.build_metadata.outputs.ISO_OUTPUT_DIR }} ${{ steps.prepare_profile.outputs.PROFILE_DIR }}/
        ACTUAL_ISO_FILE=$(find ${{ steps.build_metadata.outputs.ISO_OUTPUT_DIR }} -name "*.iso" -print -quit)
        [ -z "$ACTUAL_ISO_FILE" ] && exit 1
        echo "ACTUAL_ISO_FILE=$ACTUAL_ISO_FILE" >> "$GITHUB_OUTPUT"

    - name: Upload ISO Artifact
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-xfce-iso-${{ steps.build_metadata.outputs.BUILD_TIMESTAMP }}
        path: ${{ steps.build_iso_step.outputs.ACTUAL_ISO_FILE }}
