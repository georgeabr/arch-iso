name: Build Arch Linux ISO with XFCE

on:
  workflow_dispatch:
    inputs:
      build_date:
        description: 'Timestamp (YYYYMMDD_HHMMSS). Leave empty for now.'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest
      options: --privileged
    timeout-minutes: 120

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install archiso and tools
        run: |
          pacman -Sy --noconfirm \
            archiso squashfs-tools xorriso dosfstools \
            curl util-linux

      - name: Prepare XFCE profile from releng
        run: |
          PROFILE=xfce-profile

          # 1) Copy base releng profile
          cp -r /usr/share/archiso/configs/releng "$PROFILE"

          # 2) Add XFCE + utilities
          cat >> "$PROFILE/packages.x86_64" << 'EOF'
xfce4
xfce4-goodies
xorg-server
xorg-xinit
lightdm
lightdm-gtk-greeter
networkmanager
firefox
htop
iotop
gparted
EOF

          # 3) Rename ISO in profiledef.sh
          sed -i 's/^iso_name=.*/iso_name="archlinux-xfce"/' "$PROFILE/profiledef.sh"
          sed -i 's/^iso_label=.*/iso_label="ARCH_XFCE"/' "$PROFILE/profiledef.sh"

          # 4) Drop in your script
          curl -sSL "https://raw.githubusercontent.com/georgeabr/arch/refs/heads/master/arch.sh" \
            -o "$PROFILE/airootfs/root/arch.sh"
          chmod +x "$PROFILE/airootfs/root/arch.sh"

          # 5) Autologin XFCE as root
          cat > "$PROFILE/airootfs/etc/lightdm/lightdm.conf" << 'EOF'
[Seat:*]
autologin-user=root
autologin-session=xfce
EOF
          echo "exec startxfce4" > "$PROFILE/airootfs/root/.xinitrc"

      - name: Determine build timestamp
        id: ts
        run: |
          TS="${{ github.event.inputs.build_date }}"
          [ -z "$TS" ] && TS=$(date '+%Y%m%d_%H%M%S')
          echo "timestamp=$TS" >> "$GITHUB_OUTPUT"

      - name: Build ISO
        run: |
          mkarchiso -v -o out xfce-profile
          # find the first ISO generated
          ISO=$(find out -name '*.iso' -print -quit)
          echo "iso=$ISO"

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-xfce-iso-${{ steps.ts.outputs.timestamp }}
          path: out/*.iso
