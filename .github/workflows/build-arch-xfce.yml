name: Build Arch Linux ISO with XFCE

on:
  workflow_dispatch:
    inputs:
      build_date:
        description: 'ISO build timestamp (YYYYMMDD_HHMMSS). Leave empty for current time.'
        required: false
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux/archlinux:latest
      options: --privileged
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install archiso, tools & p7zip
        run: |
          pacman -Sy --noconfirm \
            archiso squashfs-tools xorriso dosfstools \
            p7zip curl util-linux binutils jq

      - name: Prepare XFCE profile
        id: prepare_profile
        shell: bash
        run: |
          PROFILE=xfce-profile
          rm -rf "$PROFILE"
          cp -r /usr/share/archiso/configs/releng "$PROFILE"

          mkdir -p \
            "$PROFILE/airootfs/root" \
            "$PROFILE/airootfs/etc/lightdm" \
            "$PROFILE/airootfs/etc/systemd/system/multi-user.target.wants"

          for pkg in \
            xfce4 xfce4-goodies xorg-server xorg-xinit \
            lightdm lightdm-gtk-greeter networkmanager \
            firefox htop iotop gparted network-manager-applet
          do
            echo "$pkg" >> "$PROFILE/packages.x86_64"
          done

          # Enable NetworkManager service on boot
          ln -s /usr/lib/systemd/system/NetworkManager.service \
            "$PROFILE/airootfs/etc/systemd/system/multi-user.target.wants/NetworkManager.service"          

          sed -i \
            -e 's/^iso_name=.*/iso_name="archlinux-xfce"/' \
            -e 's/^iso_label=.*/iso_label="ARCH_XFCE"/' \
            "$PROFILE/profiledef.sh"

          curl -fsSL \
            https://raw.githubusercontent.com/georgeabr/arch/refs/heads/master/arch.sh \
            -o "$PROFILE/airootfs/root/arch.sh"
          chmod +x "$PROFILE/airootfs/root/arch.sh"

          echo 'root:x:0:0:root:/root:/bin/bash' \
            > "$PROFILE/airootfs/etc/passwd"

          echo 'exec startxfce4' \
            > "$PROFILE/airootfs/root/.xinitrc"

          echo '[Seat:*]' \
            > "$PROFILE/airootfs/etc/lightdm/lightdm.conf"
          echo 'autologin-user=root' \
            >> "$PROFILE/airootfs/etc/lightdm/lightdm.conf"
          echo 'autologin-session=xfce' \
            >> "$PROFILE/airootfs/etc/lightdm/lightdm.conf"

          # Enable NetworkManager applet autostart in XFCE
          mkdir -p "$PROFILE/airootfs/root/.config/autostart"
          cp /usr/share/applications/nm-applet.desktop \
            "$PROFILE/airootfs/root/.config/autostart/"

          echo "profile_dir=$PROFILE" >> "$GITHUB_OUTPUT"

      - name: Determine build timestamp
        id: ts
        shell: bash
        run: |
          BUILD_TS="${{ github.event.inputs.build_date }}"
          [ -z "$BUILD_TS" ] && BUILD_TS=$(date '+%Y%m%d_%H%M%S')
          echo "build_timestamp=$BUILD_TS" >> "$GITHUB_OUTPUT"

      - name: Build the ISO
        id: build_iso
        shell: bash
        run: |
          OUT=out
          mkarchiso -v -o "$OUT" "${{ steps.prepare_profile.outputs.profile_dir }}"
          ISO=$(find "$OUT" -maxdepth 1 -type f -name '*.iso' -print -quit)
          [ -z "$ISO" ] && { echo "ERROR: ISO not found!" >&2; exit 1; }
          echo "iso_path=$ISO" >> "$GITHUB_OUTPUT"

      - name: Upload ISO artifact
        uses: actions/upload-artifact@v4
        with:
          name: archlinux-xfce-iso-${{ steps.ts.outputs.build_timestamp }}
          path: ${{ steps.build_iso.outputs.iso_path }}

      - name: Fetch latest kernel version from Arch repo
        id: fetch_kernel
        shell: bash
        run: |
          PKG_JSON=$(curl -fsSL 'https://archlinux.org/packages/core/x86_64/linux/json/')
          PKGVER=$(echo "$PKG_JSON" | jq -r '.pkgver')
          PKGREL=$(echo "$PKG_JSON" | jq -r '.pkgrel')
          echo "KERNEL_VERSION_REPO=${PKGVER}-${PKGREL}" >> "$GITHUB_OUTPUT"


      - name: Create GitHub Release (Optional)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ${{ steps.build_iso.outputs.iso_path }}
          tag_name: "iso-${{ steps.ts.outputs.build_timestamp }}"
          name: "Arch Linux XFCE ISO ${{ steps.ts.outputs.build_timestamp }}"
          body: |
            Arch Linux ISO built on ${{ steps.ts.outputs.build_timestamp }}
            using the `xfce-profile`.
            Includes the `arch.sh` script in `/root/arch.sh`.
            Root user's default shell set to `/bin/bash`.
            Now includes `htop` and `iotop` packages.
            Based on Arch Linux packages available at build time.
            Kernel version (from Arch repo): `${{ steps.fetch_kernel.outputs.KERNEL_VERSION_REPO }}`
          prerelease: false
